<%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css", media: "all", "data-turbo-track": "reload" %>

<meta name="csrf-token" content="<%= form_authenticity_token %>">

<div>
  <nav class="navbar navbar-light bg-light justify-content-between px-4 py-2">
    <a class="navbar-brand fw-bold">Dashboard</a>

    <div class="d-flex gap-2">
      <%= button_to session_path, method: :delete, class: "btn btn-outline-danger" do %>
        <i class="fas fa-sign-out-alt"></i> Logout
      <% end %>
      
      <% if Current.user&.subscription_status == "active" || Current.user&.subscription_status == "paid" %>
        <button class="btn btn-danger" id="cancelSubscriptionBtn">
          <i class="fas fa-ban me-1"></i> Cancel Subscription
        </button>
      <% else %>
        <!-- ‚úÖ Purchase Subscription Button -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#subscriptionModal">
          <i class="fas fa-credit-card"></i> Purchase Subscription
        </button>
      <% end %>
    </div>
  </nav>
</div>

<!-- ‚úÖ Subscription Modal -->
<div class="modal fade" id="subscriptionModal" tabindex="-1" aria-labelledby="subscriptionModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="subscriptionModalLabel">Purchase Subscription</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="subscriptionForm">
          <div class="mb-3">
            <label for="planSelect" class="form-label">Choose Plan</label>
            <select class="form-select" id="planSelect" required>
              <option value="" disabled selected>Select a plan</option>
              <option value="<%= ENV['WEEKLY_PRICE_ID'] %>">Weekly ‚Äì ‚Çπ299</option>
              <option value="<%= ENV['MONTHLY_PRICE_ID'] %>">Monthly ‚Äì ‚Çπ1199</option>
              <option value="<%= ENV['ANNUAL_PRICE_ID'] %>">Annual ‚Äì ‚Çπ11999</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-success" id="confirmSubscriptionBtn" data-stripe-key="pk_test_51RlT3ZSG9zHmA2bGUKgu6VwAu5njMWPfv2uCyhsIgsU94QTYakPMF4DAPTmrHwm8j7SPci1X6HdkI4vyh54fNgty00Lb1wXosX">
          <i class="fas fa-check-circle me-1"></i> Confirm & Pay
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<!-- ‚úÖ Toasts -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1055">
  <div id="successToast" class="toast align-items-center text-bg-success border-0 mb-2" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">üéâ Payment successful!</div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
  <div id="cancelToast" class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">‚ùå Subscription cancelled.</div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

<!-- ‚úÖ Stripe.js -->
<script src="https://js.stripe.com/v3/"></script>

<!-- ‚úÖ Bootstrap Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- ‚úÖ Custom JS -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const confirmBtn = document.getElementById("confirmSubscriptionBtn");
    const stripe = Stripe(confirmBtn.dataset.stripeKey);

    confirmBtn.addEventListener("click", function () {
      const priceId = document.getElementById("planSelect").value;
      if (!priceId) return alert("Please select a plan.");

      fetch("/create-checkout-session", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({ price_id: priceId })
      })
      .then(res => res.json())
      .then(data => {
        if (data.id) stripe.redirectToCheckout({ sessionId: data.id });
        else alert("Something went wrong.");
      })
      .catch(err => alert("Error: " + err.message));
    });

    // ‚úÖ Show toast after redirect
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get("success") === "true") {
      const toast = new bootstrap.Toast(document.getElementById("successToast"), { delay: 5000 });
      toast.show();

      // ‚úÖ Remove `?success=true` from the URL after showing the toast
      window.history.replaceState({}, document.title, window.location.pathname);
    }

    // ‚úÖ Handle Cancel Subscription
    const cancelBtn = document.getElementById("cancelSubscriptionBtn");
    if (cancelBtn) {
      cancelBtn.addEventListener("click", function () {
        if (!confirm("Are you sure you want to cancel your subscription?")) return;

        fetch("/stripe_webhooks/cancel", { // üîÅ updated endpoint
          method: "POST",
          headers: {
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            "Content-Type": "application/json"
          }
        })
        .then(res => {
          if (res.ok) {
            const cancelToast = new bootstrap.Toast(document.getElementById("cancelToast"), { delay: 5000 });
            cancelToast.show();
            setTimeout(() => location.reload(), 3000);
          } else {
            alert("Failed to cancel subscription.");
          }
        })
        .catch(() => alert("Error cancelling subscription."));
      });
    }
  });  

  const urlParams = new URLSearchParams(window.location.search);
const sessionId = urlParams.get("session_id");

if (urlParams.get("success") === "true" && sessionId) {
  // Show invoice download button
  document.getElementById("invoiceDownloadLink").href = `/invoices/${sessionId}`;
}
</script>
